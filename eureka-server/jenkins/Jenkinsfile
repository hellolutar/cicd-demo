pipeline {
    agent any
    stages {
        stage('change dir') {
            steps {
                sh '''cd eureka-server'''
            }
        }

        stage('integrate') {
            steps {
                sh '''
                 cd eureka-server
                 echo $pwd
                 bash jenkins/build.sh
                 bash docker/integrate.sh'''
            }
        }


    }

    post {
        always {
            echo 'This will always run'
        }
        success {
            sshPublisher(
                    publishers: [
                            sshPublisherDesc(
                                    configName: '99content-server', transfers:
                                    [sshTransfer(cleanRemote: false, excludes: '', execCommand: '', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '/var/cicd-space/record-log/eureka-server/', remoteDirectorySDF: false, removePrefix: '', sourceFiles: '**/commonEnv'),
                                     sshTransfer(cleanRemote: false, excludes: '', execCommand: 'bash deploy.sh', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '/var/cicd-space/record-log/eureka-server/', remoteDirectorySDF: false, removePrefix: '', sourceFiles: '**/deploy.sh'),
                                     sshTransfer(cleanRemote: false, excludes: '', execCommand: 'rm -rf /var/cicd-space/record-log/eureka-server/*', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '', remoteDirectorySDF: false, removePrefix: '', sourceFiles: '')
                                    ]
                                    , usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: true)
                    ]
            )
        }
        failure {
            echo 'This will run only if failed'
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }
    }

}